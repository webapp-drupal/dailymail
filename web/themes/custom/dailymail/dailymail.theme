<?php

/**
 * @file
 * Functions to support theming in the dailymail theme.
 */

use Drupal\Core\Link;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function dailymail_preprocess_html(array &$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  $current_path = ltrim($current_path, '/');
  $class = \Drupal\Component\Utility\Html::cleanCssIdentifier($current_path);
  $variables['attributes']['class'] = [$class];

  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function dailymail_page_attachments_alter(array &$page) {
  $page['#attached']['library'][] = 'better_messages/better_messages';
  $page['#attached']['drupalSettings']['better_messages'] = \Drupal::config('better_messages.settings')->get();

  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function dailymail_preprocess_page(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function dailymail_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function dailymail_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function dailymail_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function dailymail_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function dailymail_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function dailymail_preprocess_node(array &$variables) {
  $node = $variables['node'];

  if ($node->getType() == 'partners') {
    $print = Link::createFromRoute(t('Print'), 'claims.print_claim', ['nid' => $node->id()], ['attributes' => ['class' => 'use-ajax btn btn-black']])->toString();
    $download = Link::createFromRoute(t('Download'), 'claims.print_claim', ['nid' => $node->id()], ['attributes' => ['class' => 'use-ajax btn btn-black']])->toString();

    $variables['print_link'] = $print;
    $variables['download_link'] = $download;

    $variables['site_logo'] = [
      '#theme' => 'image',
      '#uri' => theme_get_setting('logo.url'),
      '#alt' => t('Home'),
    ];

    $num_days = !empty($node->get('field_days_valid')->value) ? $node->get('field_days_valid')->value : '0';
    $days_valid = '+' . $num_days . ' days';
    $days_valid_time = strtotime($days_valid, time());
    $validity = date('d.m.y', $days_valid_time);

    $variables['validity'] = $validity;

    if ($node->get('field_use_voucher_image')->value) {
      $reward_image_uri = $node->field_voucher_image->entity->getFileUri();
    }
    else {
      $reward_image_uri = $node->field_reward_image->entity->getFileUri();
    }

    $reward_image = [
      '#theme' => 'image',
      // '#style_name' => 'reward_image',
      '#uri' => $reward_image_uri,
    ];

    $variables['reward_image'] = $reward_image;
  }
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function dailymail_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function dailymail_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function dailymail_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function dailymail_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function dailymail_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function dailymail_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function dailymail_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

/**
 * Implements hook_preprocess_HOOK() for views templates.
 */
function dailymail_preprocess_status_messages(&$variables) {
  $variables['attributes']['class'] = [key($variables['message_list']) . '-message'];
}

/**
 * Implements hook_preprocess_HOOK() for views templates.
 */
function dailymail_preprocess_views_view(&$variables) {
  $variables['attributes']['id'] = 'partners-view';
}

/**
 * Implements hook_preprocess_HOOK() for views templates.
 */
function dailymail_preprocess_entity_print(&$variables) {
  $variables['site_logo'] = [
    '#theme' => 'image',
    '#uri' => theme_get_setting('logo.url'),
    '#alt' => t('Home'),
  ];

  $node = isset($variables['content'][0]['#node']) ? $variables['content'][0]['#node'] : $variables['content'][0][0]['#node'];

  $num_days = !empty($node->get('field_days_valid')->value) ? $node->get('field_days_valid')->value : '0';
  $days_valid = '+' . $num_days . ' days';
  $days_valid_time = strtotime($days_valid, time());
  $validity = date('d.m.y', $days_valid_time);
  $variables['validity'] = $validity;

  $display_options = [
    'label' => 'hidden'
  ];

  if ($node->get('field_use_voucher_image')->value) {
    $reward_image_uri = $node->field_voucher_image->entity->getFileUri();
  }
  else {
    $reward_image_uri = $node->field_reward_image->entity->getFileUri();
  }

  $reward_image = $render = [
    '#theme' => 'image',
    // '#style_name' => 'reward_image',
    '#uri' => $reward_image_uri,
  ];

  $variables['field_business_logo'] = $node->field_business_logo->view($display_options);
  $variables['field_reward_image'] = $reward_image;
  $variables['field_terms_and_conditions'] = $node->field_terms_and_conditions->view($display_options);

  $tempstore = \Drupal::service('user.private_tempstore')->get('claims');

  if ($node->field_barcode_image && $node->field_barcode_image->entity) {
    $variables['voucher_image'] = $node->field_barcode_image->view($display_options);
  }
  else {
    $variables['voucher_code'] = $tempstore->get('voucher_code');
  }
}
